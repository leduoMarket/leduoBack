<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ledo.market.mapper.UserMapper">
    <resultMap id="BaseResultMap" type="com.ledo.market.mapper.UserMapper">

        <id column="uid" jdbcType="VARCHAR" property="uid" />
        <result column="user_name" jdbcType="VARCHAR" property="userName" />
        <result column="password1" jdbcType="VARCHAR" property="password" />
        <result column="phone" jdbcType="VARCHAR" property="phone" />
        <result column="role" jdbcType="VARCHAR" property="role" />
        <result column="satatus" jdbcType="INTEGER" property="satatus" />
    </resultMap>
<!--    查询出所有员工的员工信息-->
    <select id="selectAll" resultType="com.ledo.market.entity.User">
      select uid,user_name,password,phone,role,satatus
      from user
    </select>

<!--    员工界面删除员工信息，并且在员工角色表中删除对应的角色-->
    <select id="delete" parameterType="com.ledo.market.entity.User">
        delete from user where uid=#{uid}
        delete from user_role where uid = #{uid}
    </select>

<!--    向员工表插入新的员工-->
    <insert id="insert" parameterType="com.ledo.market.entity.User">
    insert into user (uid,user_name,password,phone,role,satatus)
    values (#{uid,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
      #{phone,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, 0)
  </insert>

<!--    根据传过来的员工编辑员工界面的信息-->
    <update id="updateUserInfo" parameterType="com.ledo.market.entity.User">
        update user
        set uid = #{uid,jdbcType=VARCHAR},
        user_name = #{userName,jdbcType=VARCHAR},
        password = #{password,jdbcType=VARCHAR},
        phone = #{phone,jdbcType=VARCHAR},
        role = #{role,jdbcType=VARCHAR},
        satatus = #{satatus,jdbcType=INTEGER}
        where uid = #{uid,jdbcType=VARCHAR}
    </update>

<!--    根据员工号和原始密码设置新的登录密码,pw1为原始密码，pw2为新密码-->
    <update id="changePassWord" parameterType="com.ledo.market.entity.User">
        update user set password = #{pwd2,jdbcType=VARCHAR} where uid = #{uid,jdbcType=VARCHAR}
    </update>

<!--    根据员工号设置员工角色和账号锁定状态-->
    <update id="updateRoleStatusByUid" parameterType="com.ledo.market.entity.User">
        update user
        set
        role = #{urole,jdbcType=VARCHAR} , satatus = #{ustatus,jdbcType=INTEGER}
        where uid = #{uid,jdbcType=VARCHAR}
    </update>

<!--    根据Uid获取员工-->
    <select id = "getUserByUid" resultType="com.ledo.market.entity.User">
            select * from user where uid= #{uid}
    </select>

<!--    根据角色员工id获取员工角色-->
    <select id = "getRolesByuid" resultType="java.lang.String">
            select role from roles where rid in (
            select rid from user_role where uid in (
            select uid from user where uid = #{uid}))
    </select>

</mapper>